name: ci-workflow
on: [push]

env:
  WEBRTC_RELEASE: M112
  WEBRTC_BRANCH_HEAD: branch-heads/5615
  WEBRTC_REPOSITORY: https://chromium.googlesource.com/external/webrtc/
  DEPOT_TOOLS_REPOSITORY: https://chromium.googlesource.com/chromium/tools/depot_tools

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      revision: ${{ steps.fetch-revision.outputs.revision }}
    steps:
      - id: fetch-revision
        name: Get WebRTC release revision
        run: |
          GIT_COMMIT=$(git ls-remote ${WEBRTC_REPOSITORY} --heads ${WEBRTC_BRANCH_HEAD} |cut -c -40)
          echo "WebRTC release:     ${WEBRTC_RELEASE}"
          echo "WebRTC branch head: ${WEBRTC_BRANCH_HEAD}"
          echo "WebRTC repository:  ${WEBRTC_REPOSITORY}"
          echo "WebRTC git commit:  ${GIT_COMMIT}"

          echo "revision=${GIT_COMMIT}" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    strategy:
      matrix:
        include:
          # - os: linux
          #   arch: x64
          #   gnargs: >-
          #     is_clang=false
          #     libyuv_use_neon=false
          #     rtc_enable_protobuf=false
          #     rtc_build_with_neon=false
          #     rtc_include_internal_audio_device=false
          #     rtc_include_pulse_audio=false
          #     rtc_libvpx_build_vp9=false
          #     rtc_use_gtk=false
          #     use_aura=false
          #     use_custom_libcxx=false
          #     use_dbus=false
          #     use_gold=true
          #     use_goma=false
          #     use_lld=false
          #     use_ozone=false
          #     use_udev=false
          #     use_glib=false
          #     rtc_use_x11=false
          #     use_x11=false
          #     rtc_use_pipewire=false
          #     enable_paint_preview=false
          #     libyuv_disable_jpeg=true
          #     libyuv_use_gflags=false
          #     enable_libaom=false
          #     rtc_enable_libevent=false
          #     rtc_build_libevent=false
          #     rtc_exclude_audio_processing_module=true
          #     rtc_include_builtin_audio_codecs=false
          #     rtc_include_builtin_video_codecs=false
          #     libyuv_use_neon=false
          #     rtc_enable_avx2=false
          #     rtc_enable_sctp=true
          #     rtc_use_h264=false
          #     rtc_build_libsrtp=true
          #     rtc_build_libvpx=false
          #     rtc_build_opus=false
          #     rtc_include_ilbc=false
          #     rtc_include_opus=false
          #     rtc_enable_protobuf=false
          #     toolkit_views=false
          #   target_os: '["linux"]'
          #   runs_on: ubuntu-22.04
          #   desc: pure datachannel

          # - os: android
          #   arch: arm
          #   gnargs: >-
          #     use_custom_libcxx=false
          #     use_glib=false
          #     rtc_use_x11=false
          #     use_x11=false
          #   target_os: '["linux", "android"]'
          #   runs_on: ubuntu-22.04

          - os: android
            arch: arm
            gnargs: >-
              use_custom_libcxx=false
              use_glib=false
              rtc_use_x11=false
              use_x11=false
            target_os: '["linux", "android"]'
            runs_on: ubuntu-22.04

    runs-on: ${{ matrix.runs_on }}

    env:
      GNARGS_COMMON: >-
        target_os=\"${{ matrix.os }}\"
        is_debug=false
        strip_debug_info=true
        enable_stripping=true
        enable_iterator_debugging=false
        enable_profiling=false
        use_rtti=true
        rtc_include_tests=false
        rtc_build_tools=false
        rtc_build_examples=false
        libyuv_include_tests=false
        treat_warnings_as_errors=false
      OUTPUT_NAME: WebRTC-${WEBRTC_RELEASE}-${{ matrix.os }}-${{ matrix.arch }}

    steps:
      # - name: Maximize build space
      #   uses: easimon/maximize-build-space@master
      #   with:
      #     root-reserve-mb: 512
      #     swap-size-mb: 1024
      #     remove-dotnet: true
      #     remove-codeql: true

      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: checkout depot_tools
        run: |
          git clone -v ${DEPOT_TOOLS_REPOSITORY} depot_tools
          echo "$(pwd)/depot_tools" >> $GITHUB_PATH

      - name: show build debug info
        run: |
          echo "Build environment variables:"
          export
          echo "Free disk space:"
          df -h
          # echo "Files in current work directory"
          # ls -la
          # echo "Files in depot_tools"
          # ls -la depot_tools
          echo "prepare.revision: ${{ needs.prepare.steps.fetch-revision.outputs.revision }}"

      - name: build
        run: |
          set -x
          gclient config --name src --unmanaged ${WEBRTC_REPOSITORY}
          echo 'target_os = ${{ matrix.target_os }}' >> .gclient
          # echo "content of .gclient:"
          # cat .gclient
          # gclient sync --no_bootstrap --shallow --no-history -vv --revision ${{ needs.prepare.outputs.revision }}
          echo "start gclient sync"
          gclient sync --no_bootstrap --shallow --no-history -vv --revision d75b9e9ff07ee42841b4e416629c9fbd4b058905
          echo "start gn gen"
          cd src
          gn gen out --args="${GNARGS_COMMON} ${{ matrix.gnargs }}"
          echo "Files in current work directory"
          ls -la
          echo "Files in out directory"
          ls -la out
          echo "start ninja"
          ninja -v -C out

      - name: build for iphoneos
        if: ${{ matrix.target_os == 'iphoneos' }}
        run: echo ok

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${OUTPUT_NAME}
          path: src/out/obj/libwebrtc.a
          retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: draft a release
        if: github.ref == 'refs/heads/master'
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: true
          prerelease: true
          release_name: WebRTC-${WEBRTC_RELEASE}
          # tag_name: ${{ github.ref }}
  #        body_path: CHANGELOG.md
